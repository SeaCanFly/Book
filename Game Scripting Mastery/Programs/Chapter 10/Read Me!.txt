CHAPTER 10 NOTES
-----------------------------------------------------------------------------------------------

	Chapter 10 is all about the construction of a basic virtual machine called the XVM
	prototype. This VM is capable of running the .XSE executables created by the XASM
	assembler from the last chapter. The XVM prototype can be found in the XVM Prototype/
	folder, in which you'll find the source and executables (see below for more info).

	Try running the test scripts from the last chapter in the prototype, and try writing
	new scripts of your own.
	
	The XVM Prototype is a command-line application, so you shouldn't have much trouble
	compiling it. However, it does use specific Win32 API calls to handle timing (most
	notably for the Pause instruction). Because of this, the GetCurrTime () function will
	have to be ported to non-Windows platforms and replaced with that system's call for
	retreiving the current time in milliseconds. Windows users should be able to run it
	as-is.
	

GENERAL PROGRAM NOTES
-----------------------------------------------------------------------------------------------

	Each project, example or demo in the book comes in both source code form and executable
	form. All of the book's source was compiled with Microsoft Visual C++ 6.0, so the
	project (.DSP) and workspace (.DSW) files are included as well. Source code is always
	found in the Source/ directory, and executables are always found under Executable/.
	
	It's always a good idea to make a copy of the source on your hard drive. This can be
	done by simply dragging its directory to the destination of your choice. I suggest
	copying the entire Programs/ directory into a safe place on your hard drive, so you'll
	have the entire book's content available at all times.

	Any program that uses graphics or sound is written with my Wrappuh library, which wraps
	the functionality of the Win32 API and DirectX. This is done to save you the trouble of
	sifting through pages of DX/Win32-specific code, but you still have to configure your
	compiler properly in order to compile Wrappuh programs. Specifically, MAKE SURE of the
	following:

		- wrappuh.cpp, wrappuh.h and keymap.h are included in your project.
		- The DirectX export libraries (.LIB) are included with your project
		- Your compiler's path settings include the path to the DirectX SDK.
		- Your version of DirectX is up to date; I recommend 8.1 (the latest at the
		  time of this writing). As a general rule of thumb, install the version
		  included on the CD (unless you already have a more recent one).
		- Include the WinMM.lib library. This can be found in the Lib/ directory of
		  your MSVC++ installation. This file contains a few generic multimedia
		  functions needed by the Wrappuh API-- programs will NOT compile without
		  this file!

	Remember, Wrappuh hides the details of Windows and DirectX, but it doesn't port
	anything. Demos that use graphics and sound will still require a Win32/DX platform to
	run properly.
	
	NOTE: Not all chapters require the Wrappuh library as many example programs are text-
	      based console applications. The above directions ONLY apply to graphical
	      programs, which will be clearly marked in the first section of this document. If
	      an example program is a console application, it will NOT require DirectX or the
	      Wrappuh API, and can be compiled normally. These programs will also most likely
	      compile in non-MSVC++ compilers or even alternate platforms, unless otherwise
	      noted, although I can't make any guarantees.

-----------------------------------------------------------------------------------------------

Have fun!

--Alex
  alex@amvbooks.com